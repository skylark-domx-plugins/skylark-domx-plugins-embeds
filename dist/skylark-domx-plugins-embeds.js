/**
 * skylark-domx-plugins-embeds - The skylark embed plugin library for dom api extension.
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-domx-plugins/skylark-domx-plugins-embeds/
 * @license MIT
 */
!function(e,n){var o=n.define,require=n.require,r="function"==typeof o&&o.amd,s=!r&&"undefined"!=typeof exports;if(!r&&!o){var t={};o=n.define=function(e,n,o){"function"==typeof o?(t[e]={factory:o,deps:n.map(function(n){return function(e,n){if("."!==e[0])return e;var o=n.split("/"),r=e.split("/");o.pop();for(var s=0;s<r.length;s++)"."!=r[s]&&(".."==r[s]?o.pop():o.push(r[s]));return o.join("/")}(n,e)}),resolved:!1,exports:null},require(e)):t[e]={factory:null,resolved:!0,exports:o}},require=n.require=function(e){if(!t.hasOwnProperty(e))throw new Error("Module "+e+" has not been defined");var module=t[e];if(!module.resolved){var o=[];module.deps.forEach(function(e){o.push(require(e))}),module.exports=module.factory.apply(n,o)||null,module.resolved=!0}return module.exports}}if(!o)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(e,require){e("skylark-domx-plugins-embeds/embeds",["skylark-langx-ns"],function(e){"use strict";return e.attach("domx.plugins.embeds")}),e("skylark-domx-plugins-embeds/embed-runner",["skylark-domx-iframes/create","skylark-domx/query","skylark-domx-plugins-base","./embeds"],function(e,n,o,r){"use strict";var s=n(window),t=n(document),i=o.Plugin.inherit({klassName:"EmbedRunner",pluginName:"domx.EmbedRunner",options:{runnerUrl:"",runnerName:""},_construct:function(e,n){this.overrided(e,n),this.runner={},this.runner.origin="*"},prepare:function(){return this._inited?this._inited.promise:(this._inited=new Deferred,e({url:this.options.runnerUrl,className:"stretch",sandbox:"allow-modals allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts",frameBorder:"0",name:"<proxy>",contentWindowName:this.options.runnerName,onload:()=>{window.postMessage&&(s.on("message",e=>{this.handleMessage(e.originalEvent)}),this.setup(iframe),this._inited.resolve())},onerror:e=>{this._inited.reject(e)}},this._elm),t.on("codeChange.live",(e,n)=>{"setValue"!==n.origin&&n.origin}),t.on("console:run",(e,n)=>{this.postMessage("console:run",n)}),t.on("console:load:script",(e,n)=>{this.postMessage("console:load:script",n)}),t.on("console:load:dom",(e,n)=>{this.postMessage("console:load:dom",n)}),inited.promise)},setup:function(e){this.runner.window=e.contentWindow,this.runner.iframe=e},error:function(){window.console.warn.apply(console,["Renderer:"].concat([].slice.call(arguments)))},handleMessage:function(e){if(e.origin){var n=e.data;if("string"==typeof n){try{n="string"==typeof e.data?JSON.parse(e.data):e.data}catch(e){return this.error("Error parsing event data:",e.message)}if("function"!=typeof this[n.type])return!1;try{this[n.type](n.data)}catch(e){this.error(e.message)}}}},postMessage:function(e,n){if(!this.runner.window)return this.error("postMessage: No connection to runner window.");this.runner.window.postMessage(JSON.stringify({type:e,data:n}),this.runner.origin)},complete:function(){try{store.sessionStorage.removeItem("runnerPending")}catch(e){}},focus:function(){},console:function(e){var n=e.method,o=e.args;window._console&&(window._console[n]||(n="log"),window._console[n].apply(window._console,o))},"console:load:script:success":function(e){t.trigger("console:load:script:success",e)},"console:load:script:error":function(e){t.trigger("console:load:script:error",e)},"console:load:dom:success":function(e){t.trigger("console:load:dom:success",e)},"console:load:dom:error":function(e){t.trigger("console:load:dom:error",e)}});return r.EmbedRunner=i}),e("skylark-domx-plugins-embeds/main",["./embeds","./embed-runner"],function(e){return e}),e("skylark-domx-plugins-embeds",["skylark-domx-plugins-embeds/main"],function(e){return e})}(o),!r){var i=require("skylark-langx-ns");s?module.exports=i:n.skylarkjs=i}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-domx-plugins-embeds.js.map
